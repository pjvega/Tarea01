version: '3'
services:
  app-book:
    image: jaimesalvador/app-books:1.0.0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-book.rule=PathPrefix(`/books`)"
      - "traefik.http.services.app-book.loadbalancer.server.port=7001"
    depends_on:
      - db
    environment:
      - DB_URL=jdbc:postgresql://db:5432/postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
    deploy:
      replicas: 3
    expose:
      - 7001
  app-author:
    image: jaimesalvador/app-authors:1.0.0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-author.rule=PathPrefix(`/authors`)"
      - "traefik.http.services.app-author.loadbalancer.server.port=7070"
    depends_on:
      - db
    environment:
      - DB_URL=jdbc:postgresql://db:5432/postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
    deploy:
      replicas: 2
    expose:
      - 7070
  app-web:
    image: jaimesalvador/app-web:1.0.0
    deploy:
      replicas: 1
    ports:
      - 8080:4567
  db:
    image: postgres:alpine
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
  traefik:
    image: "traefik:v3.0"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80" # entrypoint on docker e.g: 8888
    ports:
      - "80:80" # localhost : entrypoint on docker e.g:  4545:8888
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
